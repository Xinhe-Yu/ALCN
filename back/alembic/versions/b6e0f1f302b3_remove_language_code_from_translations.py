"""remove_language_code_from_translations

Revision ID: b6e0f1f302b3
Revises: 473d33eae1aa
Create Date: 2025-08-12 11:11:22.990887

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b6e0f1f302b3'
down_revision: Union[str, Sequence[str], None] = '473d33eae1aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_comments_created_at'), table_name='comments')
    op.create_index('idx_comments_created_at', 'comments', ['created_at'], unique=False)
    op.alter_column('entries', 'other_language_codes',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=10)),
               comment=None,
               existing_comment='Additional language codes for entries with multiple language sources',
               existing_nullable=True)
    op.drop_index(op.f('idx_entries_created_at'), table_name='entries')
    op.create_index('idx_entries_created_at', 'entries', ['created_at'], unique=False)
    op.create_index('idx_entries_type', 'entries', ['entry_type'], unique=False)
    op.alter_column('translations', 'is_preferred',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('translations', 'upvotes',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('translations', 'downvotes',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.drop_index(op.f('idx_translations_language'), table_name='translations')
    op.drop_constraint(op.f('translations_entry_lang_name_unique'), 'translations', type_='unique')
    op.create_unique_constraint('translations_entry_name_unique', 'translations', ['entry_id', 'translated_name'])
    op.drop_column('translations', 'language_code')
    op.drop_index(op.f('idx_verification_codes_code_active'), table_name='verification_codes', postgresql_where='(used_at IS NULL)')
    op.drop_index(op.f('idx_verification_codes_user_expires'), table_name='verification_codes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_verification_codes_user_expires'), 'verification_codes', ['user_id', 'expires_at'], unique=False)
    op.create_index(op.f('idx_verification_codes_code_active'), 'verification_codes', ['code'], unique=False, postgresql_where='(used_at IS NULL)')
    op.add_column('translations', sa.Column('language_code', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.drop_constraint('translations_entry_name_unique', 'translations', type_='unique')
    op.create_unique_constraint(op.f('translations_entry_lang_name_unique'), 'translations', ['entry_id', 'language_code', 'translated_name'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_translations_language'), 'translations', ['language_code'], unique=False)
    op.alter_column('translations', 'downvotes',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('translations', 'upvotes',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('translations', 'is_preferred',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_index('idx_entries_type', table_name='entries')
    op.drop_index('idx_entries_created_at', table_name='entries')
    op.create_index(op.f('idx_entries_created_at'), 'entries', [sa.literal_column('created_at DESC')], unique=False)
    op.alter_column('entries', 'other_language_codes',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=10)),
               comment='Additional language codes for entries with multiple language sources',
               existing_nullable=True)
    op.drop_index('idx_comments_created_at', table_name='comments')
    op.create_index(op.f('idx_comments_created_at'), 'comments', [sa.literal_column('created_at DESC')], unique=False)
    # ### end Alembic commands ###
